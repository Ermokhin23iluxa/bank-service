version: '3.8'

services:
  kafdrop:
    image: obsidiandynamics/kafdrop:3.31.0
    container_name: kafdrop
    environment:
      KAFKA_BROKER_CONNECT: "kafka:29092"  # Используем внутренний порт
      KAFKA_PROPERTIES: "bootstrap.servers=kafka:29092"  # Добавляем явное указание
      #KAFKA_BROKERCONNECT: "kafka:9092"
    depends_on:
      - kafka
    ports:
      - "9000:9000"
    networks:
      - bank-network


  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: bank-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - bank-network
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: bank-kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092
      # для приложений на хосте (IDE) — advertise localhost:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - bank-network
    restart: unless-stopped


  bank-redis:
    image: redis:7-alpine
    container_name: bank-redis
    ports:
      - "6379:6379"
    networks:
      - bank-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  bank-postgres:
    image: postgres:15
    container_name: bank-postgres
    environment:
      POSTGRES_DB: bank_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
    ports:
      - "5432:5432"
    volumes:
      - bank-postgres-data:/var/lib/postgresql/data
    networks:
      - bank-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  bank-postgres-data:

networks:
  bank-network:
    driver: bridge