spring.application.name=bank-service
server.port=${PORT}

spring.profiles.active=prod

encrypt.secret-key:${SECRET_KEY}
encrypt.salt:${SALT}


logging.charset.console=UTF-8
logging.charset.file=UTF-8

server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true


outbox.poll.ms=15000
#Kafka
spring.kafka.bootstrap-servers=localhost:9092,localhost:9093,localhost:9094
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
# \u0436\u0434\u0435\u043C \u043F\u043E\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043D\u0438\u0435 \u0442\u043E\u043B\u044C\u043A\u043E \u043E\u0442 \u043B\u0438\u0434\u0435\u0440\u0430 / all - \u043E\u0442 \u0432\u0441\u0435\u0445
spring.kafka.producer.acks=all
spring.kafka.producer.retries=10000
spring.kafka.producer.properties.retry.backoff.ms=1000
# \u0437\u0430\u0449\u0438\u0442\u0430 \u043E\u0442 \u0434\u0443\u0431\u043B\u0438\u043A\u0430\u0442\u043E\u0432
spring.kafka.producer.properties.enable.idempotence=true
#\u043D\u0435\u0442 \u043F\u0430\u0440\u0430\u043B\u043B\u0435\u043B\u0438\u0437\u043C\u0430 \u0441\u0442\u0440\u043E\u0433\u0438\u0439 \u043F\u043E\u0440\u044F\u0434\u043E\u043A
spring.kafka.producer.properties.max.in.flight.requests.per.connection=1




spring.kafka.consumer.group-id=bank-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

#redis
spring.data.redis.port=6379
spring.data.redis.host=localhost

